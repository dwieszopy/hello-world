# Builds a docker image to use for dagster fast deployments
# This script will build & deploy an image to dagster cloud
# on PR merge to main

name: Build and deploy base docker image for dagster's fast deployments.
run-name: ${{ github.actor }} is building docker image
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          path: project-repo

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build and push to local registry
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:docker"
          push: true
          tags: localhost:5000/acme-dagster-base-image:temporary

      - name: Inspect docker image
        run: docker buildx imagetools inspect localhost:5000/acme-dagster-base-image:temporary

      - name: Print Published Tag
        run: |
          echo "Put the following tag in the 'dagster' repo, branch_deployments.yml SERVERLESS_BASE_IMAGE_TAG"
          echo "to test out your base docker image in staging:"
          echo "SERVERLESS_BASE_IMAGE_TAG = 'acme-dagster-base-image_${{ github.run_number }}'"
      - name: Get next version
        id: get_next_version
        uses: thenativeweb/get-next-version@main
        with:
          prefix: 'v' # optional, defaults to ''
      - name: Show the next version
        run: |
          echo ${{ steps.get_next_version.outputs.version }}
          echo ${{ steps.get_next_version.outputs.hasNextVersion }}
      - name: Get Dockerfile content
        id: dockerfile_content
        run: echo "dockerfile_content = $(cat docker/Dockerfile)" >> "$GITHUB_ENV"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    
        with:
          tag_name: ${{ steps.get_next_version.outputs.version }}
          release_name: Release ${{ steps.get_next_version.outputs.version }}
          body: |
            Changes to the Dockerfile:
            ${{ steps.dockerfile_content.outputs.dockerfile_content }}
          draft: false
          prerelease: false

